pub async fn motor_handler(mut stream: PinnedStream, mutex: HubMutex, hub_name: String) {
    use lego_powered_up::notifications::NotificationMessage;

    while let Some(data) = stream.next().await {
        // println!("Received data from {:?} [{:?}]: {:?}", hub_name, data.uuid, data.value);

        let r = NotificationMessage::parse(&data.value);
        match r {
            Ok(n) => {
                // dbg!(&n);
                match n {
                    // Active feedback
                    NotificationMessage::PortValueSingle(val) => {

                    }
                    NotificationMessage::PortValueCombinedmode(val) => {}

                    // Setup feedback and errors
                    NotificationMessage::PortInputFormatSingle(val) => {}
                    NotificationMessage::PortInputFormatCombinedmode(val) => {}
                    NotificationMessage::PortOutputCommandFeedback(val ) => {}
                    NotificationMessage::GenericErrorMessages(val) => {}

                    _ => ()
                }
            }
            Err(e) => {
                println!("Parse error: {}", e);
            }
        }

    }  
}